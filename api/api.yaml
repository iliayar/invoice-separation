swagger: '2.0'
basePath: /
info:
    title: Invoice separation
    description: TODO
    version: '1.0'

securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-Api-Key

paths:

  /user/register:
    post:
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      responses:
        '200':
          description: Success
        '401':
          description: Such user already exists

  /user/login:
    post:
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      responses:
        '200':
          description: Success
          schema:
            type: string
            description: User API Token
        '401':
          description: No such user or password missmatch

  /contacts:
    post:
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items: 
              type: string
            description: List of contacts to add
        - name: X-Api-Key
          in: header
          required: true
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Success
        '401':
          description: You are not logged in
        '404':
          description: One or more users in list not found
    get:
      parameters:
        - name: X-Api-Key
          in: header
          required: true
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: List of all contacts
          schema:
            type: array
            items:
              type: string
        '401':
          description: You are not logged in

  /invoice-separation:
    post:
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/InvoiceSeparationRequest"
        - name: X-Api-Key
          in: header
          required: true
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Ok
        '400':
          description: | 
            One of:
            * Invoice is negative number
            * List of users is empty
        '401':
          description: You are not logged in
        '404':
          description: |
            One of:
            * One or more users in list not found
            * Current user is presented in the list

  /debt:
    post:
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/UsernameRequest"
          description: User to pay debt to
        - name: X-Api-Key
          in: header
          required: true
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: The amount of debt payed
          schema:
            type: integer
        '400':
          description: Cannot pay debt to yourself or you owe nothing
        '401':
          description: You are not logged in
        '404':
          description: No such user
    get:
      parameters:
        - name: user
          in: query
          required: true
          type: string
          description: User to get incoming debt from
        - name: X-Api-Key
          in: header
          required: true
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: |
            * Negative number: Provided user ows you
            * Positive number: You owe to requested user
          schema:
            type: integer
        '400':
          description: Cannot get debt to yourself
        '401':
          description: You are not logged in
        '404':
          description: No such user
      

definitions:

  Credentials:
    type: object
    properties: 
      login:
        type: string
        required: true
      password:
        type: string
        required: true
    required:
      - login
      - password


  InvoiceSeparationRequest:
    type: object
    properties:
      invoice:
        type: integer
        description: Amount of money spent
        required: true
      users:
        type: array
        items: 
          type: string
        required: true
        description: Users to split money between


  UsernameRequest:
    type: object
    properties: 
      username:
        type: string
        required: true
